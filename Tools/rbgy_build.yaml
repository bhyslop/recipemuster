# Google Cloud Build for Recipe Bottle RBIA
#
# Policy:
# - Build & push are performed using Google-curated builder images.
# - Any third-party containers (jq, syft) are used ONLY AFTER the image has been created and pushed,
#   so they cannot contaminate the produced image.
# - OPTIONAL: an OFF-by-default binfmt step is provided for multi-arch emulation; enabling it will
#   run a third-party container BEFORE the image is created (tonistiigi/binfmt). Leave it disabled
#   to adhere strictly to the policy.

steps:
  - name: gcr.io/cloud-builders/gcloud
    id: auth-docker-to-gar
    entrypoint: bash
    args:
      - -lc
      - |
        set -euo pipefail
        gcloud auth configure-docker "${_RBGY_GAR_LOCATION}-docker.pkg.dev" --quiet

  # OPTIONAL (OFF by default): Install QEMU binfmt for cross-arch builds.
  # WARNING: This runs a non-Google container BEFORE the image is created.
  # Keep _RBGY_ENABLE_BINFMT=0 to comply with "non-Google only after image creation".
  - name: gcr.io/cloud-builders/docker
    id: binfmt-setup-optional
    entrypoint: bash
    args:
      - -lc
      - |
        set -euo pipefail
        if test "${_RBGY_ENABLE_BINFMT:-0}" = "1"; then
          test -n "${_RBGY_BINFMT_REF}" || (echo "_RBGY_BINFMT_REF missing" >&2; exit 1)
          docker run --privileged --rm "${_RBGY_BINFMT_REF}" --install arm64,amd64
        else
          echo "binfmt disabled by policy (_RBGY_ENABLE_BINFMT!=1)"
        fi

  - name: gcr.io/cloud-builders/docker
    id: buildx-create
    entrypoint: bash
    args:
      - -lc
      - |
        set -euo pipefail
        docker buildx create --name rbia-builder --driver docker-container --use
        docker buildx inspect --bootstrap

  - name: gcr.io/cloud-builders/docker
    id: build-and-push
    entrypoint: bash
    args:
      - -lc
      - |
        set -euo pipefail
        # One-var-per-line checks
        test -n "${_RBGY_DOCKERFILE}"     || (echo "_RBGY_DOCKERFILE missing"     >&2; exit 1)
        test -n "${_RBGY_TAG}"            || (echo "_RBGY_TAG missing"            >&2; exit 1)
        test -n "${_RBGY_MONIKER}"        || (echo "_RBGY_MONIKER missing"        >&2; exit 1)
        test -n "${_RBGY_PLATFORMS}"      || (echo "_RBGY_PLATFORMS missing"      >&2; exit 1)
        test -n "${_RBGY_GAR_LOCATION}"   || (echo "_RBGY_GAR_LOCATION missing"   >&2; exit 1)
        test -n "${_RBGY_GAR_PROJECT}"    || (echo "_RBGY_GAR_PROJECT missing"    >&2; exit 1)
        test -n "${_RBGY_GAR_REPOSITORY}" || (echo "_RBGY_GAR_REPOSITORY missing" >&2; exit 1)
        test -n "${_RBGY_GIT_COMMIT}"     || (echo "_RBGY_GIT_COMMIT missing"     >&2; exit 1)
        test -n "${_RBGY_GIT_BRANCH}"     || (echo "_RBGY_GIT_BRANCH missing"     >&2; exit 1)
        test -n "${_RBGY_GIT_REPO}"       || (echo "_RBGY_GIT_REPO missing"       >&2; exit 1)

        # Build target URI
        IMAGE_URI="${_RBGY_GAR_LOCATION}-docker.pkg.dev/${_RBGY_GAR_PROJECT}/${_RBGY_GAR_REPOSITORY}/${_RBGY_MONIKER}:${_RBGY_TAG}"

        # Simple command logger: no tee (preserve exit statuses)
        : > build.log
        run() { echo "\$ $* " >> build.log; "$@" >> build.log 2>&1; }

        run docker buildx version
        run docker version
        run docker info

        # Multi-arch build (requires native workers or binfmt if enabled)
        run docker buildx build \
          --platform="${_RBGY_PLATFORMS}" \
          --tag "${IMAGE_URI}" \
          --push \
          --label "moniker=${_RBGY_MONIKER}" \
          --label "git.commit=${_RBGY_GIT_COMMIT}" \
          --label "git.branch=${_RBGY_GIT_BRANCH}" \
          -f "${_RBGY_DOCKERFILE}" \
          .

        echo "${IMAGE_URI}" > .image_uri

  # METADATA (POST-BUILD): assemble build_info.json with jq (third-party), after the push.
  - name: "${_RBGY_JQ_REF}"
    id: assemble-metadata
    entrypoint: sh
    args:
      - -c
      - |
        set -euo pipefail
        test -n "${_RBGY_TAG}"        || (echo "_RBGY_TAG missing"        >&2; exit 1)
        test -n "${_RBGY_MONIKER}"    || (echo "_RBGY_MONIKER missing"    >&2; exit 1)
        test -n "${_RBGY_GIT_COMMIT}" || (echo "_RBGY_GIT_COMMIT missing" >&2; exit 1)
        test -n "${_RBGY_GIT_BRANCH}" || (echo "_RBGY_GIT_BRANCH missing" >&2; exit 1)
        test -n "${_RBGY_GIT_REPO}"   || (echo "_RBGY_GIT_REPO missing"   >&2; exit 1)
        test -n "${_RBGY_PLATFORMS}"  || (echo "_RBGY_PLATFORMS missing"  >&2; exit 1)
        test -n "${BUILD_ID}"         || (echo "BUILD_ID missing"         >&2; exit 1)

        cp "${_RBGY_DOCKERFILE}" recipe.txt
        TS="$(date -u +%FT%TZ)"
        jq -n                                    \
          --arg tag       "${_RBGY_TAG}"         \
          --arg moniker   "${_RBGY_MONIKER}"     \
          --arg repo      "${_RBGY_GIT_REPO}"    \
          --arg branch    "${_RBGY_GIT_BRANCH}"  \
          --arg commit    "${_RBGY_GIT_COMMIT}"  \
          --arg build_id  "${BUILD_ID}"          \
          --arg ts        "${TS}"                \
          --arg platforms "${_RBGY_PLATFORMS}"   \
          '{
            tag: $tag,
            moniker: $moniker,
            git: { repo: $repo, branch: $branch, commit: $commit },
            build: { id: $build_id, timestamp: $ts },
            platforms: $platforms
          }' > build_info.json

  # SBOM (POST-BUILD): syft runs after push; third-party container cannot contaminate the image.
  - name: gcr.io/cloud-builders/docker
    id: sbom-and-summary
    entrypoint: bash
    args:
      - -lc
      - |
        set -euo pipefail
        test -n "${_RBGY_SYFT_REF}" || (echo "_RBGY_SYFT_REF missing" >&2; exit 1)
        IMAGE_URI="$(cat .image_uri)"
        docker run --rm "${_RBGY_SYFT_REF}" "${IMAGE_URI}" -o json  > syft_analysis.json
        docker run --rm "${_RBGY_SYFT_REF}" "${IMAGE_URI}" -o table > package_summary.txt

  - name: gcr.io/cloud-builders/gcloud
    id: make-metadata-tarball
    entrypoint: bash
    args:
      - -lc
      - |
        set -euo pipefail
        tar -czf "${_RBGY_TAG}_metadata.tgz" \
          recipe.txt \
          build_info.json \
          syft_analysis.json \
          package_summary.txt \
          build.log

  - name: gcr.io/cloud-builders/gcloud
    id: publish-gar-generic
    entrypoint: bash
    args:
      - -lc
      - |
        set -euo pipefail
        gcloud artifacts files upload \
          --location="${_RBGY_GAR_LOCATION}" \
          --repository="${_RBGY_GAR_REPOSITORY}" \
          --project="${_RBGY_GAR_PROJECT}" \
          --package="${_RBGY_TAG}" \
          --version="metadata" \
          "${_RBGY_TAG}_metadata.tgz"

options:
  machineType: E2_HIGHCPU_8
  logging: CLOUD_LOGGING_ONLY

timeout: 1200s

substitutions:
  # Required inputs
  _RBGY_DOCKERFILE: Dockerfile
  _RBGY_TAG: dev
  _RBGY_MONIKER: rbia
  _RBGY_PLATFORMS: linux/amd64,linux/arm64
  _RBGY_GAR_LOCATION: us-central1
  _RBGY_GAR_PROJECT: your-project-id
  _RBGY_GAR_REPOSITORY: your-repo
  _RBGY_GIT_COMMIT: unknown
  _RBGY_GIT_BRANCH: unknown
  _RBGY_GIT

