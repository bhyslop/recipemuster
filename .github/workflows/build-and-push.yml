name: Build and Push Container with Metrics

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Calculate Dockerfile hash
      id: dockerfile-hash
      run: echo "::set-output name=hash::$(md5sum Study/study-basic-container-registry-cycle/Dockerfile | awk '{ print $1 }')"

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ steps.dockerfile-hash.outputs.hash }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Get start time
      run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: Study/study-basic-container-registry-cycle
        push: ${{ github.event_name != 'pull_request' }}
        tags: ghcr.io/bhyslop/recipemuster:hello-world-v1
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Get end time and calculate duration
      run: |
        END_TIME=$(date +%s)
        DURATION=$((END_TIME - START_TIME))
        echo "Build duration: $DURATION seconds"
        echo "BUILD_DURATION=$DURATION" >> $GITHUB_ENV

    - name: Check image size
      run: |
        IMAGE_SIZE=$(docker image inspect ghcr.io/bhyslop/recipemuster:hello-world-v1 --format='{{.Size}}')
        IMAGE_SIZE_MB=$((IMAGE_SIZE / 1024 / 1024))
        echo "Image size: $IMAGE_SIZE_MB MB"
        echo "IMAGE_SIZE=$IMAGE_SIZE_MB" >> $GITHUB_ENV

    - name: Check disk usage
      run: |
        DISK_USAGE=$(du -sh . | cut -f1)
        echo "Total disk usage: $DISK_USAGE"
        echo "DISK_USAGE=$DISK_USAGE" >> $GITHUB_ENV

    - name: Report metrics
      run: |
        echo "Build Duration: $BUILD_DURATION seconds"
        echo "Image Size: $IMAGE_SIZE MB"
        echo "Disk Usage: $DISK_USAGE"

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
