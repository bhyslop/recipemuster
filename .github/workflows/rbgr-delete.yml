name: RBGR Image Delete Workflow

on:
  repository_dispatch:
    types: [rbgr_delete]

jobs:
  delete:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Delete image and clean orphans
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RBG_RUNTIME: docker
        shell: bash
        run: |
          # Create unique temp directory in workspace
          export RBG_TEMP_DIR="${{ github.workspace }}/.rbg-temp-${{ github.run_id }}-${{ github.run_attempt }}"

          # Ensure it's completely empty
          rm -rf   "${RBG_TEMP_DIR}"
          mkdir -p "${RBG_TEMP_DIR}"

          # Generate timestamp (required by CLI)
          export RBG_NOW_STAMP=$(date +'%Y%m%d__%H%M%S')

          # Delete image
          ./Tools/rbgr_cli.sh rbgr_delete_image "${{ github.event.client_payload.fqin }}"

          # Clean temp directory for next CLI call
          rm -rf   "${RBG_TEMP_DIR}"/*

          # Clean orphans
          ./Tools/rbgr_cli.sh rbgr_clean_orphans

      - name: Commit deletion history
        shell: bash
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add . || echo "No changes to add"
          git commit -m "Record deletion of image ${{ github.event.client_payload.fqin }}" || echo "No changes to commit"
          git push || echo "No changes to push"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

