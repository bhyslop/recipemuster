name: Build and Push Containers

on:
  workflow_dispatch:
  repository_dispatch:
    types: [build_containers]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      config: ${{ steps.read-config.outputs.config }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Check and display configuration
        run: |
          make -f bgcv.Variables.mk bgcv_check_rule
          make -f bgcv.Variables.mk bgcv_display_rule > config_output.txt
          echo "config=$(cat config_output.txt | jq -R 'split("=") | {(.[0]): .[1]}' | jq -s add)" >> $GITHUB_OUTPUT

  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: ${{ fromJson(needs.setup.outputs.config).BGCV_RECIPES_DIR }}/${{ fromJson(needs.setup.outputs.config).BGCV_RECIPE_PATTERN }}
      max-parallel: ${{ fromJson(needs.setup.outputs.config).BGCV_MAX_PARALLEL }}
      fail-fast: ${{ fromJson(needs.setup.outputs.config).BGCV_FAIL_FAST }}
    continue-on-error: ${{ fromJson(needs.setup.outputs.config).BGCV_CONTINUE_ON_ERROR }}
    timeout-minutes: ${{ fromJson(needs.setup.outputs.config).BGCV_TIMEOUT_MINUTES }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate build metadata
        id: meta
        run: |
          TIMESTAMP=$(date +'%Y%m%d__%H%M%S')
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          FILENAME=$(basename ${{ matrix.dockerfile }} | cut -f 1 -d '.')
          BUILD_LABEL="${FILENAME}.${SHORT_SHA}.${TIMESTAMP}"
          echo "build_label=$BUILD_LABEL" >> $GITHUB_OUTPUT
          echo "history_dir=${{ fromJson(needs.setup.outputs.config).BGCV_HISTORY_DIR }}/$BUILD_LABEL" >> $GITHUB_OUTPUT

      - name: Create history directory
        run: |
          HISTORY_DIR=${{ steps.meta.outputs.history_dir }}
          if [ -d "$HISTORY_DIR" ]; then
            echo "Error: History directory already exists"
            exit 1
          fi
          mkdir -p $HISTORY_DIR
          cp ${{ matrix.dockerfile }} $HISTORY_DIR/
          echo ${{ github.sha }} > $HISTORY_DIR/commit.txt

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ghcr.io/${{ fromJson(needs.setup.outputs.config).BGCV_REGISTRY_OWNER }}/${{ fromJson(needs.setup.outputs.config).BGCV_REGISTRY_NAME }}:${{ steps.meta.outputs.build_label }}
          platforms: ${{ fromJson(needs.setup.outputs.config).BGCV_BUILD_ARCHITECTURES }}

      - name: Create digest.txt
        run: |
          IMAGE_SIZE=$(docker image inspect ghcr.io/${{ fromJson(needs.setup.outputs.config).BGCV_REGISTRY_OWNER }}/${{ fromJson(needs.setup.outputs.config).BGCV_REGISTRY_NAME }}:${{ steps.meta.outputs.build_label }} --format='{{.Size}}')
          IMAGE_SIZE_MB=$((IMAGE_SIZE / 1024 / 1024))
          BUILD_DURATION=${{ job.duration }}
          echo "Image size: ${IMAGE_SIZE_MB}MB" > ${{ steps.meta.outputs.history_dir }}/digest.txt
          echo "Build duration: ${BUILD_DURATION}s" >> ${{ steps.meta.outputs.history_dir }}/digest.txt

      - name: Commit history directory
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add ${{ steps.meta.outputs.history_dir }}
          git commit -m "Add build history for ${{ steps.meta.outputs.build_label }}"
          git push

      - name: Upload build transcript
        uses: actions/upload-artifact@v4
        with:
          name: build-transcript-${{ steps.meta.outputs.build_label }}
          path: ${{ steps.meta.outputs.history_dir }}/history.txt

    concurrency: 
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: false
