name: BGC Single Container Build Workflow

on:
  repository_dispatch:
    types: [build_containers]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Validate configuration files
        shell: bash
        run: |
          echo "GHA: about to validate configuration files..."
          test -f bgc-config.mk ||\
            (echo "GHA: Error: bgc-config.mk is missing" && false)
          test -f ${{ github.workspace }}/Tools/bgc_flow_helper.mk ||\
            (echo "GHA: Error: bgc_flow_helper.mk is missing" && false)

      - name: Check required variables
        shell: bash
        run: |
          echo "GHA: about to check required variables..."
          make -f ${{ github.workspace }}/Tools/bgc_flow_helper.mk bgcfh_check_rule

      - name: Load configuration
        shell: bash
        run: |
          echo "GHA: about to establish env vars from helper makefile..."
          eval "$(make -f ${{ github.workspace }}/Tools/bgc_flow_helper.mk bgcfh_display_rule)" | grep '^BGCV_' >> $GITHUB_ENV
          echo "GHA: Environment variables have been submitted, available in next step."

      - name: Set and validate Dockerfile path
        shell: bash
        run: |
          echo "GHA: about to set and validate Dockerfile path..."
          test -n "${{ github.event.client_payload.dockerfile }}" ||\
            (echo "GHA: Error: Dockerfile path not provided in client_payload" && false)
          test -f "${{ github.event.client_payload.dockerfile }}" ||\
            (echo "GHA: Error: Dockerfile not found at path: ${{ github.event.client_payload.dockerfile }}" && false)
          echo "DOCKERFILE=${{ github.event.client_payload.dockerfile }}" >> $GITHUB_ENV

      - name: Generate build metadata
        shell: bash
        run: |
          echo "GHA: about to generate build metadata..."
          TIMESTAMP=$(date +'%Y%m%d__%H%M%S')
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          FULL_FILENAME=$(basename ${{ env.DOCKERFILE }})
          FILENAME_WITHOUT_EXT="${FULL_FILENAME%.*}"
          BUILD_LABEL="${FILENAME_WITHOUT_EXT}.${SHORT_SHA}.${TIMESTAMP}"
          echo "BUILD_LABEL=$BUILD_LABEL" >> $GITHUB_ENV
          echo "GHCR_PATH=ghcr.io/${{ env.BGCV_REGISTRY_OWNER }}/${{ env.BGCV_REGISTRY_NAME }}:$BUILD_LABEL" >> $GITHUB_ENV
          echo "HISTORY_DIR=${{ env.BGCV_HISTORY_DIR }}/$BUILD_LABEL" >> $GITHUB_ENV
          echo "GHA: Var TIMESTAMP=$TIMESTAMP"
          echo "GHA: Var SHORT_SHA=$SHORT_SHA"
          echo "GHA: Var FULL_FILENAME=$FULL_FILENAME"
          echo "GHA: Var FILENAME_WITHOUT_EXT=$FILENAME_WITHOUT_EXT"
          echo "GHA: Var BUILD_LABEL=$BUILD_LABEL"
          echo "GHA: Var GHCR_PATH=$GHCR_PATH"
          echo "GHA: Var HISTORY_DIR=${{ env.BGCV_HISTORY_DIR }}/$BUILD_LABEL"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if tag exists
        shell: bash
        run: |
          echo "GHA: about to check if tag exists..."
          docker manifest inspect ${{ env.GHCR_PATH }} > /dev/null 2>&1 &&\
            (echo "GHA: Error: Tag ${{ env.BUILD_LABEL }} already exists" && false)
          echo "GHA: Tag does not exist, proceeding with build"

      - name: Create history directory
        shell: bash
        run: |
          echo "GHA: about to create history directory..."
          mkdir -p ${{ env.HISTORY_DIR }} ||\
            (echo "GHA: Error: Failed to create history directory" && false)
          cp ${{ env.DOCKERFILE }} ${{ env.HISTORY_DIR }}/ ||\
            (echo "GHA: Error: Failed to copy Dockerfile to history directory" && false)
          echo ${{ github.sha }} > ${{ env.HISTORY_DIR }}/commit.txt ||\
            (echo "GHA: Error: Failed to create commit.txt" && false)

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          push: true
          tags: ${{ env.GHCR_PATH }}
          platforms: ${{ env.BGCV_BUILD_ARCHITECTURES }}

      - name: Capture build log
        if: always()
        run: |
          echo "GHA: about to capture detailed build log..."
          mkdir -p ${{ env.HISTORY_DIR }}
          {
            echo "Dockerfile: ${{ env.DOCKERFILE }}"
            echo "Build label: ${{ env.BUILD_LABEL }}"
            echo "-----BEGIN BUILD LOG STEPS-----"
            echo "${{ toJSON(steps.docker_build.outputs) }}"
            echo "-----END BUILD LOG STEPS-----"
            echo "Build completed at: $(date)"
          } > ${{ env.HISTORY_DIR }}/history.txt
          echo "GHA: Detailed build log saved to ${{ env.HISTORY_DIR }}/history.txt"
          echo "Build and push step output:"
          echo "${{ steps.docker_build.outputs.metadata }}" > ${{ env.HISTORY_DIR }}/build_metadata.json
          echo "Full job log:"
          cat $GITHUB_STEP_SUMMARY > ${{ env.HISTORY_DIR }}/full_job_log.txt

      - name: Process and display build log
        if: always()
        run: |
          echo "Processing build log..."
          echo "Build metadata:"
          cat ${{ env.HISTORY_DIR }}/build_metadata.json
          echo "Full job log summary:"
          cat ${{ env.HISTORY_DIR }}/full_job_log.txt
          # Add any additional processing you need here

      - name: Upload build transcript
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-transcript-${{ env.BUILD_LABEL }}
          path: ${{ env.HISTORY_DIR }}/history.txt

      - name: Create digest.txt
        shell: bash
        run: |
          echo "GHA: about to create digest.txt..."
          docker pull ${{ env.GHCR_PATH }}
          IMAGE_SIZE=$(docker image inspect ${{ env.GHCR_PATH }} --format='{{.Size}}')
          IMAGE_SIZE_MB=$((IMAGE_SIZE / 1024 / 1024))
          BUILD_DURATION=${{ steps.docker_build.outputs.duration }}
          echo "Image size: ${IMAGE_SIZE_MB}MB" > ${{ env.HISTORY_DIR }}/digest.txt
          echo "Build duration: ${BUILD_DURATION}s" >> ${{ env.HISTORY_DIR }}/digest.txt

      - name: Commit history directory
        shell: bash
        run: |
          echo "GHA: about to commit history directory..."
          git config --local user.email "github-actions[bot]@users.noreply.github.com" ||\
            (echo "GHA: Error: Failed to set git user email" && false)
          git config --local user.name "github-actions[bot]" ||\
            (echo "GHA: Error: Failed to set git user name" && false)
          git add ${{ env.HISTORY_DIR }} ||\
            (echo "GHA: Error: Failed to stage history directory" && false)
          git commit -m "Add build history for ${{ env.BUILD_LABEL }}" ||\
            (echo "GHA: Error: Failed to commit history directory" && false)
          git push ||\
            (echo "GHA: Error: Failed to push changes" && false)

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

