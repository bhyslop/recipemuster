name: BGC Single Container Build Workflow

on:
  workflow_dispatch:
    inputs:
      dockerfile:
        description: 'Path to the Dockerfile to build'
        required: true
        type: string
  repository_dispatch:
    types: [build_containers]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Load configuration
        run: |
          if [ ! -f bgc-config.mk ]; then
            echo "Error: bgc-config.mk is missing"
            exit 1
          fi
          source bgc-config.mk
          echo "BGCV_BUILD_ARCHITECTURES=$BGCV_BUILD_ARCHITECTURES" >> $GITHUB_ENV
          echo "BGCV_HISTORY_DIR=$BGCV_HISTORY_DIR" >> $GITHUB_ENV
          echo "BGCV_REGISTRY_OWNER=$BGCV_REGISTRY_OWNER" >> $GITHUB_ENV
          echo "BGCV_REGISTRY_NAME=$BGCV_REGISTRY_NAME" >> $GITHUB_ENV

      - name: Set Dockerfile path
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "DOCKERFILE=${{ github.event.inputs.dockerfile }}" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" == "repository_dispatch" ]; then
            echo "DOCKERFILE=${{ github.event.client_payload.dockerfile }}" >> $GITHUB_ENV
          else
            echo "Error: Unsupported event type"
            exit 1
          fi

      - name: Generate build metadata
        id: meta
        run: |
          TIMESTAMP=$(date +'%Y%m%d__%H%M%S')
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          FILENAME=$(basename $DOCKERFILE | cut -f 1 -d '.')
          BUILD_LABEL="${FILENAME}.${SHORT_SHA}.${TIMESTAMP}"
          echo "BUILD_LABEL=$BUILD_LABEL" >> $GITHUB_ENV
          echo "HISTORY_DIR=${{ env.BGCV_HISTORY_DIR }}/$BUILD_LABEL" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if tag exists
        run: |
          if docker manifest inspect ghcr.io/${{ env.BGCV_REGISTRY_OWNER }}/${{ env.BGCV_REGISTRY_NAME }}:${{ env.BUILD_LABEL }} > /dev/null 2>&1; then
            echo "Error: Tag ${{ env.BUILD_LABEL }} already exists"
            exit 1
          fi

      - name: Create history directory
        run: |
          mkdir -p $HISTORY_DIR
          cp $DOCKERFILE $HISTORY_DIR/
          echo ${{ github.sha }} > $HISTORY_DIR/commit.txt

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          push: true
          tags: ghcr.io/${{ env.BGCV_REGISTRY_OWNER }}/${{ env.BGCV_REGISTRY_NAME }}:${{ env.BUILD_LABEL }}
          platforms: ${{ env.BGCV_BUILD_ARCHITECTURES }}

      - name: Create digest.txt
        run: |
          IMAGE_SIZE=$(docker image inspect ghcr.io/${{ env.BGCV_REGISTRY_OWNER }}/${{ env.BGCV_REGISTRY_NAME }}:${{ env.BUILD_LABEL }} --format='{{.Size}}')
          IMAGE_SIZE_MB=$((IMAGE_SIZE / 1024 / 1024))
          BUILD_DURATION=${{ job.duration }}
          echo "Image size: ${IMAGE_SIZE_MB}MB" > $HISTORY_DIR/digest.txt
          echo "Build duration: ${BUILD_DURATION}s" >> $HISTORY_DIR/digest.txt

      - name: Commit history directory
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add $HISTORY_DIR
          git commit -m "Add build history for ${{ env.BUILD_LABEL }}"
          git push

      - name: Upload build transcript
        uses: actions/upload-artifact@v4
        with:
          name: build-transcript-${{ env.BUILD_LABEL }}
          path: ${{ env.HISTORY_DIR }}/history.txt

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

